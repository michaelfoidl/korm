apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'

buildscript {
    ext {
        VERSION = '0.1'

        kotlin_version = '1.2.71'
        exposed_version = '0.10.5'
        jdbc_sqlite_version = '3.23.1'
        hikari_version = '3.2.0'
        kotlinPoet_version = '1.0.0-RC1'
        autoService_version = '1.0-rc4'
        
        kluent_version = '1.41'
        junit_version = '5.3.1'
        bintray_version = '1.8.4'
        dokka_version = '0.9.17'

        kotlin_core = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        kotlin_reflection = "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        kotlin_compiler = "org.jetbrains.kotlin:kotlin-compiler:$kotlin_version"
        exposed = "org.jetbrains.exposed:exposed:$exposed_version"
        jdbc_sqlite = "org.xerial:sqlite-jdbc:$jdbc_sqlite_version"
        hikari = "com.zaxxer:HikariCP:$hikari_version"
        kotlinPoet = "com.squareup:kotlinpoet:$kotlinPoet_version"
        autoService = "com.google.auto.service:auto-service:$autoService_version"
        
        junit_api = "org.junit.jupiter:junit-jupiter-api:$junit_version"
        junit_engine = "org.junit.jupiter:junit-jupiter-engine:$junit_version"
        kluent = "org.amshove.kluent:kluent:$kluent_version"
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
//        classpath "at.michaelfoidl.korm:korm-gradle-plugin:0.1"
    }

    repositories {
        jcenter()
        flatDir {
            dirs "$buildDir.absolutePath/.."
        }
    }
}

task integrationTest(type: Test, dependsOn: ":integrationTests:integrationTest") {
    description = "Runs the integration tests."
    group = 'verification'
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/exposed"
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()
        testLogging {
            events("passed", "skipped", "failed")
        }
    }
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path)}

task allJar(type: Jar, dependsOn: subprojects.assemble) {
    baseName = 'korm'
    subprojects.each { subproject ->
        if (subproject.name != "integrationTests" && subproject.name != "testUtils")
        from subproject.configurations.archives.allArtifacts.files.collect {
            zipTree(it)
        }
    }
}

// Publishing

version = VERSION

task sourcesJar(type: Jar, dependsOn: classes) {
    description = "Builds the sources.jar archive for publishing."
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokka) {
    description = "Builds the javadoc.jar archive for publishing."
    classifier = 'javadoc'
    from dokka.outputDirectory
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Spftware License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "michaelfoidl"
            name "Michael Foidl"
        }
    }

    scm {
        url "https://gitlab.com/michaelfoidl/korm.git"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'at.michaelfoidl'
            artifactId 'korm'
            version VERSION
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'An OR-Mapper for Kotlin.')
                root.appendNode('name', 'korm')
                root.appendNode('url', 'https://gitlab.com/michaelfoidl/korm')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']
    publish = true
    pkg {
        repo = 'korm'
        name = 'korm'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://gitlab.com/michaelfoidl/korm.git'
        version {
            name = VERSION
            desc = "korm library version $VERSION"
            released = new Date()
        }
    }
}